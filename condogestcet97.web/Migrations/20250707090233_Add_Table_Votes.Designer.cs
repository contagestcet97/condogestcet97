// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using condogestcet97.web.Data;

#nullable disable

namespace condogestcet97.web.Migrations
{
    [DbContext(typeof(DataContextCondominium))]
    [Migration("20250707090233_Add_Table_Votes")]
    partial class Add_Table_Votes
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("condogestcet97.web.Data.Entities.Condominium.Apartment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CondoId")
                        .HasColumnType("int");

                    b.Property<string>("Divisions")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("Flat")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("varchar(4)");

                    b.HasKey("Id");

                    b.HasIndex("CondoId");

                    b.ToTable("Apartments");
                });

            modelBuilder.Entity("condogestcet97.web.Data.Entities.Condominium.Condo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.HasKey("Id");

                    b.ToTable("Condos");
                });

            modelBuilder.Entity("condogestcet97.web.Data.Entities.Condominium.Document", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("DocumentType")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<DateTime>("EmissionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Documents");

                    b.HasDiscriminator<string>("DocumentType").HasValue("Document");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("condogestcet97.web.Data.Entities.Condominium.Incident", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ApartmentId")
                        .HasColumnType("int");

                    b.Property<int>("CondoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<bool>("IsResolved")
                        .HasColumnType("bit");

                    b.Property<string>("NotifierId")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("ApartmentId");

                    b.HasIndex("CondoId");

                    b.ToTable("Incidents");
                });

            modelBuilder.Entity("condogestcet97.web.Data.Entities.Condominium.Intervention", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<int>("IncidentId")
                        .HasColumnType("int");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("IncidentId");

                    b.ToTable("Interventions");
                });

            modelBuilder.Entity("condogestcet97.web.Data.Entities.Condominium.Meeting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CondoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Topic")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CondoId");

                    b.ToTable("Meetings");
                });

            modelBuilder.Entity("condogestcet97.web.Data.Entities.Condominium.Vote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<int>("MeetingId")
                        .HasColumnType("int");

                    b.Property<int>("VotesAbstained")
                        .HasColumnType("int");

                    b.Property<int>("VotesAgainst")
                        .HasColumnType("int");

                    b.Property<int>("VotesInFavour")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MeetingId");

                    b.ToTable("Votes");
                });

            modelBuilder.Entity("condogestcet97.web.Data.Entities.Condominium.InterventionDocument", b =>
                {
                    b.HasBaseType("condogestcet97.web.Data.Entities.Condominium.Document");

                    b.Property<int>("InterventionId")
                        .HasColumnType("int");

                    b.HasIndex("InterventionId");

                    b.HasDiscriminator().HasValue("Intervention");
                });

            modelBuilder.Entity("condogestcet97.web.Data.Entities.Condominium.MeetingDocument", b =>
                {
                    b.HasBaseType("condogestcet97.web.Data.Entities.Condominium.Document");

                    b.Property<int>("MeetingId")
                        .HasColumnType("int");

                    b.HasIndex("MeetingId");

                    b.HasDiscriminator().HasValue("Meeting");
                });

            modelBuilder.Entity("condogestcet97.web.Data.Entities.Condominium.Apartment", b =>
                {
                    b.HasOne("condogestcet97.web.Data.Entities.Condominium.Condo", "Condo")
                        .WithMany("Apartments")
                        .HasForeignKey("CondoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Condo");
                });

            modelBuilder.Entity("condogestcet97.web.Data.Entities.Condominium.Incident", b =>
                {
                    b.HasOne("condogestcet97.web.Data.Entities.Condominium.Apartment", "Apartment")
                        .WithMany()
                        .HasForeignKey("ApartmentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("condogestcet97.web.Data.Entities.Condominium.Condo", "Condo")
                        .WithMany()
                        .HasForeignKey("CondoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Apartment");

                    b.Navigation("Condo");
                });

            modelBuilder.Entity("condogestcet97.web.Data.Entities.Condominium.Intervention", b =>
                {
                    b.HasOne("condogestcet97.web.Data.Entities.Condominium.Incident", "Incident")
                        .WithMany("Interventions")
                        .HasForeignKey("IncidentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Incident");
                });

            modelBuilder.Entity("condogestcet97.web.Data.Entities.Condominium.Meeting", b =>
                {
                    b.HasOne("condogestcet97.web.Data.Entities.Condominium.Condo", "Condo")
                        .WithMany()
                        .HasForeignKey("CondoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Condo");
                });

            modelBuilder.Entity("condogestcet97.web.Data.Entities.Condominium.Vote", b =>
                {
                    b.HasOne("condogestcet97.web.Data.Entities.Condominium.Meeting", "Meeting")
                        .WithMany()
                        .HasForeignKey("MeetingId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Meeting");
                });

            modelBuilder.Entity("condogestcet97.web.Data.Entities.Condominium.InterventionDocument", b =>
                {
                    b.HasOne("condogestcet97.web.Data.Entities.Condominium.Intervention", "Intervention")
                        .WithMany()
                        .HasForeignKey("InterventionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Intervention");
                });

            modelBuilder.Entity("condogestcet97.web.Data.Entities.Condominium.MeetingDocument", b =>
                {
                    b.HasOne("condogestcet97.web.Data.Entities.Condominium.Meeting", "Meeting")
                        .WithMany()
                        .HasForeignKey("MeetingId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Meeting");
                });

            modelBuilder.Entity("condogestcet97.web.Data.Entities.Condominium.Condo", b =>
                {
                    b.Navigation("Apartments");
                });

            modelBuilder.Entity("condogestcet97.web.Data.Entities.Condominium.Incident", b =>
                {
                    b.Navigation("Interventions");
                });
#pragma warning restore 612, 618
        }
    }
}
